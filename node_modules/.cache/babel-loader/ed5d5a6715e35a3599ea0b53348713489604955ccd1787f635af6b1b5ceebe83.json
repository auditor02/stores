{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wisdom\\\\React\\\\store\\\\store\\\\src\\\\components\\\\Extras\\\\Display.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoint = \"https://api.spacex.land/graphql/\";\nconst FILMS_QUERY = `\n  {\n    launchesPast(limit: 10) {\n      id\n      mission_name\n    }\n  }\n`;\nexport default function App() {\n  _s();\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery(\"launches\", () => {\n    return axios({\n      url: endpoint,\n      method: \"POST\",\n      data: {\n        query: FILMS_QUERY\n      }\n    }).then(response => response.data.data);\n  });\n  if (isLoading) return \"Loading...\";\n  if (error) return /*#__PURE__*/_jsxDEV(\"pre\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SpaceX Launches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.launchesPast.map(launch => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: launch.mission_name\n      }, launch.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z3b93vmhJEnCPN4ovcxRGbOtffM=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","axios","useQuery","endpoint","FILMS_QUERY","App","data","isLoading","error","url","method","query","then","response","message","launchesPast","map","launch","mission_name","id"],"sources":["C:/Users/wisdom/React/store/store/src/components/Extras/Display.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nconst endpoint = \"https://api.spacex.land/graphql/\";\r\nconst FILMS_QUERY = `\r\n  {\r\n    launchesPast(limit: 10) {\r\n      id\r\n      mission_name\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function App() {\r\n  const { data, isLoading, error } = useQuery(\"launches\", () => {\r\n    return axios({\r\n      url: endpoint,\r\n      method: \"POST\",\r\n      data: {\r\n        query: FILMS_QUERY\r\n      }\r\n    }).then(response => response.data.data);\r\n  });\r\n\r\n  if (isLoading) return \"Loading...\";\r\n  if (error) return <pre>{error.message}</pre>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>SpaceX Launches</h1>\r\n      <ul>\r\n        {data.launchesPast.map((launch) => (\r\n          <li key={launch.id}>{launch.mission_name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAAC;AAEvC,MAAMC,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,WAAW,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGN,QAAQ,CAAC,UAAU,EAAE,MAAM;IAC5D,OAAOD,KAAK,CAAC;MACXQ,GAAG,EAAEN,QAAQ;MACbO,MAAM,EAAE,MAAM;MACdJ,IAAI,EAAE;QACJK,KAAK,EAAEP;MACT;IACF,CAAC,CAAC,CAACQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACP,IAAI,CAACA,IAAI,CAAC;EACzC,CAAC,CAAC;EAEF,IAAIC,SAAS,EAAE,OAAO,YAAY;EAClC,IAAIC,KAAK,EAAE,oBAAO;IAAA,UAAMA,KAAK,CAACM;EAAO;IAAA;IAAA;IAAA;EAAA,QAAO;EAE5C,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eACxB;MAAA,UACGR,IAAI,CAACS,YAAY,CAACC,GAAG,CAAEC,MAAM,iBAC5B;QAAA,UAAqBA,MAAM,CAACC;MAAY,GAA/BD,MAAM,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QACnB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GAxBuBd,GAAG;EAAA,QACUH,QAAQ;AAAA;AAAA,KADrBG,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}