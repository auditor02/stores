{"ast":null,"code":"import React, { Component } from 'react';\nimport fetch from 'isomorphic-fetch';\nclass MyComponent extends Component {\n  componentDidMount() {\n    const query = `\n      query MyQuery {\n        products {\n          id\n          name\n          price\n          description\n          imageUrl\n        }\n      }\n    `;\n    fetch('/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    }).then(res => res.json()).then(response => {\n      // do something with the response here, such as setting the state\n      // with the fetched products data\n      this.setState({\n        products: response.data.products\n      });\n    });\n  }\n  render() {\n    // render your component and display the fetched products data here\n  }\n}","map":{"version":3,"names":["React","Component","fetch","MyComponent","componentDidMount","query","method","headers","Accept","body","JSON","stringify","then","res","json","response","setState","products","data","render"],"sources":["C:/Users/wisdom/React/store/store/src/components/Extras/Display.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport fetch from 'isomorphic-fetch';\r\n\r\nclass MyComponent extends Component {\r\n  componentDidMount() {\r\n    const query = `\r\n      query MyQuery {\r\n        products {\r\n          id\r\n          name\r\n          price\r\n          description\r\n          imageUrl\r\n        }\r\n      }\r\n    `;\r\n\r\n    fetch('/graphql', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n      body: JSON.stringify({ query }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        // do something with the response here, such as setting the state\r\n        // with the fetched products data\r\n        this.setState({ products: response.data.products });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    // render your component and display the fetched products data here\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,kBAAkB;AAEpC,MAAMC,WAAW,SAASF,SAAS,CAAC;EAClCG,iBAAiB,GAAG;IAClB,MAAMC,KAAK,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IAEDH,KAAK,CAAC,UAAU,EAAE;MAChBI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE;MACV,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN;MAAM,CAAC;IAChC,CAAC,CAAC,CACCO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,QAAQ,IAAI;MAChB;MACA;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEC,QAAQ,EAAEF,QAAQ,CAACG,IAAI,CAACD;MAAS,CAAC,CAAC;IACrD,CAAC,CAAC;EACN;EAEAE,MAAM,GAAG;IACP;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}