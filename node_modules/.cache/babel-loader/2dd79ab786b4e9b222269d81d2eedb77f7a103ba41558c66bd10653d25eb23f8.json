{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wisdom\\\\React\\\\store\\\\store\\\\src\\\\components\\\\Extras\\\\Display.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_USER_DATA = gql`\n  query getUserData($userId: ID!) {\n    user(id: $userId) {\n      name\n      email\n      address\n    }\n  }\n`;\nfunction UserD(_ref) {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_USER_DATA, {\n    variables: {\n      userId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", data.user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", data.user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Address: \", data.user.address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(UserD, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n_c = UserD;\nvar _c;\n$RefreshReg$(_c, \"UserD\");","map":{"version":3,"names":["useQuery","gql","GET_USER_DATA","UserD","userId","data","loading","error","variables","user","name","email","address"],"sources":["C:/Users/wisdom/React/store/store/src/components/Extras/Display.jsx"],"sourcesContent":["import { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\n\r\nconst GET_USER_DATA = gql`\r\n  query getUserData($userId: ID!) {\r\n    user(id: $userId) {\r\n      name\r\n      email\r\n      address\r\n    }\r\n  }\r\n`;\r\n\r\nfunction UserD({ userId }) {\r\n  const { data, loading, error } = useQuery(GET_USER_DATA, {\r\n    variables: { userId },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error!</p>;\r\n\r\n  return (\r\n    <div>\r\n      <p>Name: {data.user.name}</p>\r\n      <p>Email: {data.user.email}</p>\r\n      <p>Address: {data.user.address}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,qBAAqB;AAC9C,OAAOC,GAAG,MAAM,aAAa;AAAC;AAE9B,MAAMC,aAAa,GAAGD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASE,KAAK,OAAa;EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC;EACvB,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGP,QAAQ,CAACE,aAAa,EAAE;IACvDM,SAAS,EAAE;MAAEJ;IAAO;EACtB,CAAC,CAAC;EAEF,IAAIE,OAAO,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;EACrC,IAAIC,KAAK,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAa;EAE/B,oBACE;IAAA,wBACE;MAAA,qBAAUF,IAAI,CAACI,IAAI,CAACC,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7B;MAAA,sBAAWL,IAAI,CAACI,IAAI,CAACE,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/B;MAAA,wBAAaN,IAAI,CAACI,IAAI,CAACG,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/B;AAEV;AAAC,GAfQT,KAAK;EAAA,QACqBH,QAAQ;AAAA;AAAA,KADlCG,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}