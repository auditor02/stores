{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wisdom\\\\React\\\\store\\\\store\\\\src\\\\components\\\\Extras\\\\Display.jsx\",\n  _s = $RefreshSig$();\nimport './Display.css';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_PRODUCTS = gql`\n{\n  products(\n    first: 10\n    channel: \"default-channel\"\n\t\tfilter: { search: \"shoes\" }\n    sortBy: { direction: ASC }\n\t) {\n    edges {\n      node {\n        name\n\t\t\t\tthumbnail: media {\n\t\t\t\t\turl\n\t\t\t\t}\n      }\n    }\n  }\n}\n`;\nfunction Display(url) {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PRODUCTS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  return data.locations.map(_ref => {\n    let {\n      name,\n      thumbnail\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"id\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: `${thumbnail}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"id\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: `${thumbnail}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"id\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: `${thumbnail.media = {\n            url\n          }}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this);\n  });\n}\n_s(Display, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["useQuery","gql","GET_PRODUCTS","Display","url","loading","error","data","message","locations","map","name","thumbnail","media"],"sources":["C:/Users/wisdom/React/store/store/src/components/Extras/Display.jsx"],"sourcesContent":["import './Display.css'\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\n\r\nconst GET_PRODUCTS = gql `\r\n{\r\n  products(\r\n    first: 10\r\n    channel: \"default-channel\"\r\n\t\tfilter: { search: \"shoes\" }\r\n    sortBy: { direction: ASC }\r\n\t) {\r\n    edges {\r\n      node {\r\n        name\r\n\t\t\t\tthumbnail: media {\r\n\t\t\t\t\turl\r\n\t\t\t\t}\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nfunction Display(url) {\r\n  const { loading, error, data } = useQuery(GET_PRODUCTS);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error : {error.message}</p>;\r\n\r\n  return data.locations.map(({ name, thumbnail  }) => (\r\n    <div className=\"boxes\">\r\n       <div key={name} className=\"id\">\r\n        <img className='img' src={`${thumbnail }`} />\r\n          <br />\r\n        </div>\r\n        <div key={name} className=\"id\">\r\n          <img className='img' src={`${thumbnail }`} />\r\n            <br />\r\n          </div>\r\n          <div key={name} className=\"id\">\r\n        <img className='img' src={`${thumbnail.media={url} }`} />\r\n          <br />\r\n        </div>\r\n      </div>\r\n        )\r\n      )\r\n    }\r\n\r\n  export default Display"],"mappings":";;AAAA,OAAO,eAAe;AACtB,SAASA,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAAC;AAG/C,MAAMC,YAAY,GAAGD,GAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASE,OAAO,CAACC,GAAG,EAAE;EAAA;EACpB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGP,QAAQ,CAACE,YAAY,CAAC;EAEvD,IAAIG,OAAO,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;EACrC,IAAIC,KAAK,EAAE,oBAAO;IAAA,uBAAYA,KAAK,CAACE,OAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAAK;EAEhD,OAAOD,IAAI,CAACE,SAAS,CAACC,GAAG,CAAC;IAAA,IAAC;MAAEC,IAAI;MAAEC;IAAW,CAAC;IAAA,oBAC7C;MAAK,SAAS,EAAC,OAAO;MAAA,wBACnB;QAAgB,SAAS,EAAC,IAAI;QAAA,wBAC7B;UAAK,SAAS,EAAC,KAAK;UAAC,GAAG,EAAG,GAAEA,SAAW;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3C;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA,GAFCD,IAAI;QAAA;QAAA;QAAA;MAAA,QAGP,eACN;QAAgB,SAAS,EAAC,IAAI;QAAA,wBAC5B;UAAK,SAAS,EAAC,KAAK;UAAC,GAAG,EAAG,GAAEC,SAAW;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3C;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA,GAFAD,IAAI;QAAA;QAAA;QAAA;MAAA,QAGN,eACN;QAAgB,SAAS,EAAC,IAAI;QAAA,wBAChC;UAAK,SAAS,EAAC,KAAK;UAAC,GAAG,EAAG,GAAEC,SAAS,CAACC,KAAK,GAAC;YAACT;UAAG,CAAG;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,eACvD;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA,GAFIO,IAAI;QAAA;QAAA;QAAA;MAAA,QAGV;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,CACH,CACF;AACH;AAAC,GAvBIR,OAAO;EAAA,QACmBH,QAAQ;AAAA;AAAA,KADlCG,OAAO;AAyBd,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}