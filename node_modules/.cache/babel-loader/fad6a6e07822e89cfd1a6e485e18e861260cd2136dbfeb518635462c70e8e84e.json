{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wisdom\\\\React\\\\store\\\\store\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetch = gql`\n  {\n    Product(limit: 10) {\n      id,\n      description\n    }\n  }\n`;\nexport default function App() {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery();\n  if (loading) return \"Loading...\";\n  if (error) return /*#__PURE__*/_jsxDEV(\"pre\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"scandiweb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.Product.map(products => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: products.description\n      }, products.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useQuery","gql","fetch","App","data","loading","error","message","Product","map","products","description","id"],"sources":["C:/Users/wisdom/React/store/store/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst fetch = gql`\n  {\n    Product(limit: 10) {\n      id,\n      description\n    }\n  }\n`;\n\nexport default function App() {\n  const { data, loading, error } = useQuery();\n\n  if (loading) return \"Loading...\";\n  if (error) return <pre>{error.message}</pre>\n\n  return (\n    <div>\n      <h1>scandiweb</h1>\n      <ul>\n        {data.Product.map((products) => (\n          <li key={products.id}>{products.description}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAAC;AAE/C,MAAMC,KAAK,GAAGD,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASE,GAAG,GAAG;EAAA;EAC5B,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGN,QAAQ,EAAE;EAE3C,IAAIK,OAAO,EAAE,OAAO,YAAY;EAChC,IAAIC,KAAK,EAAE,oBAAO;IAAA,UAAMA,KAAK,CAACC;EAAO;IAAA;IAAA;IAAA;EAAA,QAAO;EAE5C,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAClB;MAAA,UACGH,IAAI,CAACI,OAAO,CAACC,GAAG,CAAEC,QAAQ,iBACzB;QAAA,UAAuBA,QAAQ,CAACC;MAAW,GAAlCD,QAAQ,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QACrB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GAhBuBT,GAAG;EAAA,QACQH,QAAQ;AAAA;AAAA,KADnBG,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}